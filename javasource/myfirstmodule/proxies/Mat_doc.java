// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class Mat_doc extends system.proxies.FileDocument
{
	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.Mat_doc";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		DateOfOrder("DateOfOrder"),
		MatName("MatName"),
		Amount("Amount"),
		Unit("Unit"),
		FileID("FileID"),
		Name("Name"),
		DeleteAfterDownload("DeleteAfterDownload"),
		Contents("Contents"),
		HasContents("HasContents"),
		Size("Size"),
		doc_mat("MyFirstModule.doc_mat");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Mat_doc(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Mat_doc(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mat_docMendixObject)
	{
		super(context, mat_docMendixObject);
		if (!com.mendix.core.Core.isSubClassOf(entityName, mat_docMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	
	}

	/**
	 * @deprecated Use 'Mat_doc.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static myfirstmodule.proxies.Mat_doc initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.Mat_doc.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static myfirstmodule.proxies.Mat_doc initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.Mat_doc(context, mendixObject);
	}

	public static myfirstmodule.proxies.Mat_doc load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.Mat_doc.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.Mat_doc> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> myfirstmodule.proxies.Mat_doc.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * @return value of DateOfOrder
	 */
	public final java.util.Date getDateOfOrder()
	{
		return getDateOfOrder(getContext());
	}

	/**
	 * @param context
	 * @return value of DateOfOrder
	 */
	public final java.util.Date getDateOfOrder(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateOfOrder.toString());
	}

	/**
	 * Set value of DateOfOrder
	 * @param dateoforder
	 */
	public final void setDateOfOrder(java.util.Date dateoforder)
	{
		setDateOfOrder(getContext(), dateoforder);
	}

	/**
	 * Set value of DateOfOrder
	 * @param context
	 * @param dateoforder
	 */
	public final void setDateOfOrder(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date dateoforder)
	{
		getMendixObject().setValue(context, MemberNames.DateOfOrder.toString(), dateoforder);
	}

	/**
	 * Set value of MatName
	 * @param matname
	 */
	public final myfirstmodule.proxies.Materials getMatName()
	{
		return getMatName(getContext());
	}

	/**
	 * @param context
	 * @return value of MatName
	 */
	public final myfirstmodule.proxies.Materials getMatName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.MatName.toString());
		if (obj == null) {
			return null;
		}
		return myfirstmodule.proxies.Materials.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of MatName
	 * @param matname
	 */
	public final void setMatName(myfirstmodule.proxies.Materials matname)
	{
		setMatName(getContext(), matname);
	}

	/**
	 * Set value of MatName
	 * @param context
	 * @param matname
	 */
	public final void setMatName(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Materials matname)
	{
		if (matname != null) {
			getMendixObject().setValue(context, MemberNames.MatName.toString(), matname.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.MatName.toString(), null);
		}
	}

	/**
	 * @return value of Amount
	 */
	public final java.math.BigDecimal getAmount()
	{
		return getAmount(getContext());
	}

	/**
	 * @param context
	 * @return value of Amount
	 */
	public final java.math.BigDecimal getAmount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.Amount.toString());
	}

	/**
	 * Set value of Amount
	 * @param amount
	 */
	public final void setAmount(java.math.BigDecimal amount)
	{
		setAmount(getContext(), amount);
	}

	/**
	 * Set value of Amount
	 * @param context
	 * @param amount
	 */
	public final void setAmount(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal amount)
	{
		getMendixObject().setValue(context, MemberNames.Amount.toString(), amount);
	}

	/**
	 * Set value of Unit
	 * @param unit
	 */
	public final myfirstmodule.proxies.Units getUnit()
	{
		return getUnit(getContext());
	}

	/**
	 * @param context
	 * @return value of Unit
	 */
	public final myfirstmodule.proxies.Units getUnit(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Unit.toString());
		if (obj == null) {
			return null;
		}
		return myfirstmodule.proxies.Units.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Unit
	 * @param unit
	 */
	public final void setUnit(myfirstmodule.proxies.Units unit)
	{
		setUnit(getContext(), unit);
	}

	/**
	 * Set value of Unit
	 * @param context
	 * @param unit
	 */
	public final void setUnit(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Units unit)
	{
		if (unit != null) {
			getMendixObject().setValue(context, MemberNames.Unit.toString(), unit.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.Unit.toString(), null);
		}
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of doc_mat
	 */
	public final myfirstmodule.proxies.Material_order getdoc_mat() throws com.mendix.core.CoreException
	{
		return getdoc_mat(getContext());
	}

	/**
	 * @param context
	 * @return value of doc_mat
	 * @throws com.mendix.core.CoreException
	 */
	public final myfirstmodule.proxies.Material_order getdoc_mat(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.Material_order result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.doc_mat.toString());
		if (identifier != null) {
			result = myfirstmodule.proxies.Material_order.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of doc_mat
	 * @param doc_mat
	 */
	public final void setdoc_mat(myfirstmodule.proxies.Material_order doc_mat)
	{
		setdoc_mat(getContext(), doc_mat);
	}

	/**
	 * Set value of doc_mat
	 * @param context
	 * @param doc_mat
	 */
	public final void setdoc_mat(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Material_order doc_mat)
	{
		if (doc_mat == null) {
			getMendixObject().setValue(context, MemberNames.doc_mat.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.doc_mat.toString(), doc_mat.getMendixObject().getId());
		}
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.Mat_doc that = (myfirstmodule.proxies.Mat_doc) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Override
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
