// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	/**
	 * @deprecated
	 * The default constructor of the Microflows class should not be used.
	 * Use the static microflow invocation methods instead.
	 */
	@java.lang.Deprecated(since = "9.12", forRemoval = true)
	public Microflows() {}

	// These are the microflows for the MyFirstModule module
	public static void apt(IContext context, myfirstmodule.proxies.Appointment _appointment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Appointment", _appointment == null ? null : _appointment.getMendixObject());
		Core.microflowCall("MyFirstModule.Apt").withParams(params).execute(context);
	}
	public static void bonus_validation(IContext context, myfirstmodule.proxies.Bonus _bonus)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Bonus", _bonus == null ? null : _bonus.getMendixObject());
		Core.microflowCall("MyFirstModule.Bonus_validation").withParams(params).execute(context);
	}
	public static void choose_bonus(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MyFirstModule.Choose_bonus").withParams(params).execute(context);
	}
	public static void coef(IContext context, myfirstmodule.proxies.Coefficients _coefficients)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Coefficients", _coefficients == null ? null : _coefficients.getMendixObject());
		Core.microflowCall("MyFirstModule.Coef").withParams(params).execute(context);
	}
	public static java.util.List<myfirstmodule.proxies.Bonus> dobavi_bonuse(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("MyFirstModule.Dobavi_bonuse").withParams(params).execute(context);
		if (objs == null) {
			return null;
		} else {
			return objs.stream()
				.map(obj -> myfirstmodule.proxies.Bonus.initialize(context, obj))
				.collect(java.util.stream.Collectors.toList());
		}
	}
	public static void edit_coef(IContext context, myfirstmodule.proxies.Coefficients _coefficients)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Coefficients", _coefficients == null ? null : _coefficients.getMendixObject());
		Core.microflowCall("MyFirstModule.Edit_coef").withParams(params).execute(context);
	}
	public static void edit_rating(IContext context, myfirstmodule.proxies.Appointment _appointment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Appointment", _appointment == null ? null : _appointment.getMendixObject());
		Core.microflowCall("MyFirstModule.Edit_rating").withParams(params).execute(context);
	}
	public static void eOTM_report(IContext context, java.util.List<myfirstmodule.proxies.Employee_of_the_month> _employee_of_the_monthList)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> listparam_employee_of_the_monthList = null;
		if (_employee_of_the_monthList != null)
		{
			listparam_employee_of_the_monthList = new java.util.ArrayList<>();
			for (var obj : _employee_of_the_monthList) {
				listparam_employee_of_the_monthList.add(obj.getMendixObject());
			}
		}
		params.put("Employee_of_the_monthList", listparam_employee_of_the_monthList);

		Core.microflowCall("MyFirstModule.EOTM_report").withParams(params).execute(context);
	}
	public static void find_EOTM(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MyFirstModule.Find_EOTM").withParams(params).execute(context);
	}
	public static void generate_order_report_EQ(IContext context, myfirstmodule.proxies.Equipment_order _equipment_order)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Equipment_order", _equipment_order == null ? null : _equipment_order.getMendixObject());
		Core.microflowCall("MyFirstModule.generate_order_report_EQ").withParams(params).execute(context);
	}
	public static void generate_order_report_MAT(IContext context, myfirstmodule.proxies.Material_order _material_order)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Material_order", _material_order == null ? null : _material_order.getMendixObject());
		Core.microflowCall("MyFirstModule.generate_order_report_MAT").withParams(params).execute(context);
	}
	public static void new_order_equp(IContext context, myfirstmodule.proxies.Equipment_order _equipment_order)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Equipment_order", _equipment_order == null ? null : _equipment_order.getMendixObject());
		Core.microflowCall("MyFirstModule.new_order_equp").withParams(params).execute(context);
	}
	public static void new_order_mat(IContext context, myfirstmodule.proxies.Material_order _material_order)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Material_order", _material_order == null ? null : _material_order.getMendixObject());
		Core.microflowCall("MyFirstModule.new_order_mat").withParams(params).execute(context);
	}
	public static void reg(IContext context, myfirstmodule.proxies.Registration _registration)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Registration", _registration == null ? null : _registration.getMendixObject());
		Core.microflowCall("MyFirstModule.Reg").withParams(params).execute(context);
	}
	public static void upd_coef(IContext context, myfirstmodule.proxies.Coefficients _newCoef)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("NewCoef", _newCoef == null ? null : _newCoef.getMendixObject());
		Core.microflowCall("MyFirstModule.Upd_coef").withParams(params).execute(context);
	}
	public static void updtRatings(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("MyFirstModule.UpdtRatings").withParams(params).execute(context);
	}
}
