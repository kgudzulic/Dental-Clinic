// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package myfirstmodule.proxies;

public class Bonus
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject bonusMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "MyFirstModule.Bonus";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Type_of_Bonus("Type_of_Bonus"),
		Amount("Amount"),
		IsGiven("IsGiven"),
		Month("Month"),
		EffectiveDateStart("EffectiveDateStart"),
		EffectiveDateEnd("EffectiveDateEnd"),
		recieves("MyFirstModule.recieves");

		private final java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Bonus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, entityName));
	}

	protected Bonus(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject bonusMendixObject)
	{
		if (bonusMendixObject == null) {
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		}
		if (!com.mendix.core.Core.isSubClassOf(entityName, bonusMendixObject.getType())) {
			throw new java.lang.IllegalArgumentException(String.format("The given object is not a %s", entityName));
		}	

		this.bonusMendixObject = bonusMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Bonus.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static myfirstmodule.proxies.Bonus initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return myfirstmodule.proxies.Bonus.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 * @param context The context to be used
	 * @param mendixObject The Mendix object for the new instance
	 * @return a new instance of this proxy class
	 */
	public static myfirstmodule.proxies.Bonus initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new myfirstmodule.proxies.Bonus(context, mendixObject);
	}

	public static myfirstmodule.proxies.Bonus load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return myfirstmodule.proxies.Bonus.initialize(context, mendixObject);
	}

	public static java.util.List<myfirstmodule.proxies.Bonus> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		return com.mendix.core.Core.createXPathQuery(String.format("//%1$s%2$s", entityName, xpathConstraint))
			.execute(context)
			.stream()
			.map(obj -> myfirstmodule.proxies.Bonus.initialize(context, obj))
			.collect(java.util.stream.Collectors.toList());
	}

	/**
	 * Commit the changes made on this proxy object.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 * @throws com.mendix.core.CoreException
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * Set value of Type_of_Bonus
	 * @param type_of_bonus
	 */
	public final myfirstmodule.proxies.Bonus_type getType_of_Bonus()
	{
		return getType_of_Bonus(getContext());
	}

	/**
	 * @param context
	 * @return value of Type_of_Bonus
	 */
	public final myfirstmodule.proxies.Bonus_type getType_of_Bonus(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Type_of_Bonus.toString());
		if (obj == null) {
			return null;
		}
		return myfirstmodule.proxies.Bonus_type.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Type_of_Bonus
	 * @param type_of_bonus
	 */
	public final void setType_of_Bonus(myfirstmodule.proxies.Bonus_type type_of_bonus)
	{
		setType_of_Bonus(getContext(), type_of_bonus);
	}

	/**
	 * Set value of Type_of_Bonus
	 * @param context
	 * @param type_of_bonus
	 */
	public final void setType_of_Bonus(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Bonus_type type_of_bonus)
	{
		if (type_of_bonus != null) {
			getMendixObject().setValue(context, MemberNames.Type_of_Bonus.toString(), type_of_bonus.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.Type_of_Bonus.toString(), null);
		}
	}

	/**
	 * @return value of Amount
	 */
	public final java.lang.Integer getAmount()
	{
		return getAmount(getContext());
	}

	/**
	 * @param context
	 * @return value of Amount
	 */
	public final java.lang.Integer getAmount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.Amount.toString());
	}

	/**
	 * Set value of Amount
	 * @param amount
	 */
	public final void setAmount(java.lang.Integer amount)
	{
		setAmount(getContext(), amount);
	}

	/**
	 * Set value of Amount
	 * @param context
	 * @param amount
	 */
	public final void setAmount(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer amount)
	{
		getMendixObject().setValue(context, MemberNames.Amount.toString(), amount);
	}

	/**
	 * @return value of IsGiven
	 */
	public final java.lang.Boolean getIsGiven()
	{
		return getIsGiven(getContext());
	}

	/**
	 * @param context
	 * @return value of IsGiven
	 */
	public final java.lang.Boolean getIsGiven(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsGiven.toString());
	}

	/**
	 * Set value of IsGiven
	 * @param isgiven
	 */
	public final void setIsGiven(java.lang.Boolean isgiven)
	{
		setIsGiven(getContext(), isgiven);
	}

	/**
	 * Set value of IsGiven
	 * @param context
	 * @param isgiven
	 */
	public final void setIsGiven(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean isgiven)
	{
		getMendixObject().setValue(context, MemberNames.IsGiven.toString(), isgiven);
	}

	/**
	 * Set value of Month
	 * @param month
	 */
	public final myfirstmodule.proxies.Dates getMonth()
	{
		return getMonth(getContext());
	}

	/**
	 * @param context
	 * @return value of Month
	 */
	public final myfirstmodule.proxies.Dates getMonth(com.mendix.systemwideinterfaces.core.IContext context)
	{
		Object obj = getMendixObject().getValue(context, MemberNames.Month.toString());
		if (obj == null) {
			return null;
		}
		return myfirstmodule.proxies.Dates.valueOf((java.lang.String) obj);
	}

	/**
	 * Set value of Month
	 * @param month
	 */
	public final void setMonth(myfirstmodule.proxies.Dates month)
	{
		setMonth(getContext(), month);
	}

	/**
	 * Set value of Month
	 * @param context
	 * @param month
	 */
	public final void setMonth(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Dates month)
	{
		if (month != null) {
			getMendixObject().setValue(context, MemberNames.Month.toString(), month.toString());
		} else {
			getMendixObject().setValue(context, MemberNames.Month.toString(), null);
		}
	}

	/**
	 * @return value of EffectiveDateStart
	 */
	public final java.util.Date getEffectiveDateStart()
	{
		return getEffectiveDateStart(getContext());
	}

	/**
	 * @param context
	 * @return value of EffectiveDateStart
	 */
	public final java.util.Date getEffectiveDateStart(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.EffectiveDateStart.toString());
	}

	/**
	 * Set value of EffectiveDateStart
	 * @param effectivedatestart
	 */
	public final void setEffectiveDateStart(java.util.Date effectivedatestart)
	{
		setEffectiveDateStart(getContext(), effectivedatestart);
	}

	/**
	 * Set value of EffectiveDateStart
	 * @param context
	 * @param effectivedatestart
	 */
	public final void setEffectiveDateStart(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date effectivedatestart)
	{
		getMendixObject().setValue(context, MemberNames.EffectiveDateStart.toString(), effectivedatestart);
	}

	/**
	 * @return value of EffectiveDateEnd
	 */
	public final java.util.Date getEffectiveDateEnd()
	{
		return getEffectiveDateEnd(getContext());
	}

	/**
	 * @param context
	 * @return value of EffectiveDateEnd
	 */
	public final java.util.Date getEffectiveDateEnd(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.EffectiveDateEnd.toString());
	}

	/**
	 * Set value of EffectiveDateEnd
	 * @param effectivedateend
	 */
	public final void setEffectiveDateEnd(java.util.Date effectivedateend)
	{
		setEffectiveDateEnd(getContext(), effectivedateend);
	}

	/**
	 * Set value of EffectiveDateEnd
	 * @param context
	 * @param effectivedateend
	 */
	public final void setEffectiveDateEnd(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date effectivedateend)
	{
		getMendixObject().setValue(context, MemberNames.EffectiveDateEnd.toString(), effectivedateend);
	}

	/**
	 * @throws com.mendix.core.CoreException
	 * @return value of recieves
	 */
	public final myfirstmodule.proxies.Employee_of_the_month getrecieves() throws com.mendix.core.CoreException
	{
		return getrecieves(getContext());
	}

	/**
	 * @param context
	 * @return value of recieves
	 * @throws com.mendix.core.CoreException
	 */
	public final myfirstmodule.proxies.Employee_of_the_month getrecieves(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		myfirstmodule.proxies.Employee_of_the_month result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.recieves.toString());
		if (identifier != null) {
			result = myfirstmodule.proxies.Employee_of_the_month.load(context, identifier);
		}
		return result;
	}

	/**
	 * Set value of recieves
	 * @param recieves
	 */
	public final void setrecieves(myfirstmodule.proxies.Employee_of_the_month recieves)
	{
		setrecieves(getContext(), recieves);
	}

	/**
	 * Set value of recieves
	 * @param context
	 * @param recieves
	 */
	public final void setrecieves(com.mendix.systemwideinterfaces.core.IContext context, myfirstmodule.proxies.Employee_of_the_month recieves)
	{
		if (recieves == null) {
			getMendixObject().setValue(context, MemberNames.recieves.toString(), null);
		} else {
			getMendixObject().setValue(context, MemberNames.recieves.toString(), recieves.getMendixObject().getId());
		}
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return bonusMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this) {
			return true;
		}
		if (obj != null && getClass().equals(obj.getClass()))
		{
			final myfirstmodule.proxies.Bonus that = (myfirstmodule.proxies.Bonus) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return entityName;
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
